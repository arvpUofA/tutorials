<launch>
    <!-- Minimal Bringup -->
    <include file="$(find turtlebot_bringup)/launch/minimal.launch" />

    <!-- 3D sensor -->
    <arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>  <!-- r200, kinect, asus_xtion_pro -->
    <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
      <arg name="rgb_processing" value="false" />
      <arg name="depth_registration" value="false" />
      <arg name="depth_processing" value="false" />

      <!-- We must specify an absolute topic name because if not it will be prefixed by "$(arg camera)".
           Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 -->
      <arg name="scan_topic" value="/scan" />
    </include>

    <!-- Map server -->
    <arg name="map_file" default="$(find pioneer_bot)/maps/map.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <!-- Joystick -->
    <node name="joy_node" pkg="joy" type="joy_node" />

    <!-- AMCL -->
    <arg name="custom_amcl_launch_file" default="$(find turtlebot_navigation)/launch/includes/amcl/$(arg 3d_sensor)_amcl.launch.xml"/>
    <arg name="initial_pose_x" default="-5.0"/> <!-- Use 17.0 for willow's map in simulation -->
    <arg name="initial_pose_y" default="1.0"/> <!-- Use 17.0 for willow's map in simulation -->
    <arg name="initial_pose_a" default="0.0"/>
    <param name="amcl/initial_cov_xx" value="15.0"/>
    <param name="amcl/initial_cov_yy" value="15.0"/>
    <param name="amcl/initial_cov_aa" value="3.14"/>
    <param name="amcl/max_particles" value="60000" />
    <param name="amcl/min_particles" value="250" />
    <param name="amcl/kld_err" value="0.05" />
    <param name="amcl/recovery_alpha_slow" value="0.001" />
    <param name="amcl/recovery_alpha_fast" value="0.1" />

    <include file="$(arg custom_amcl_launch_file)">

      <arg name="initial_pose_x" value="-5.0"/>
      <arg name="initial_pose_y" value="1.0"/>
      <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>

    </include>

    <!-- Move base -->
    <arg name="custom_param_file" default="$(find turtlebot_navigation)/param/$(arg 3d_sensor)_costmap_params.yaml"/>

    <include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/>
    <include file="$(find turtlebot_navigation)/launch/includes/safety_controller.launch.xml"/>

    <arg name="odom_frame_id"   default="odom"/>
    <arg name="base_frame_id"   default="base_footprint"/>
    <arg name="global_frame_id" default="map"/>
    <arg name="odom_topic" default="odom" />
    <arg name="laser_topic" default="scan" />
    <!--arg name="custom_param_file_1" default="$(find turtlebot_navigation)/param/dummy.yaml"/-->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="$(find turtlebot_navigation)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find turtlebot_navigation)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find turtlebot_navigation)/param/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find turtlebot_navigation)/param/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find comp5)/param/dwa_local_planner_params.yaml" command="load" />
      <rosparam file="$(find turtlebot_navigation)/param/move_base_params.yaml" command="load" />
      <rosparam file="$(find turtlebot_navigation)/param/global_planner_params.yaml" command="load" />
      <rosparam file="$(find turtlebot_navigation)/param/navfn_global_planner_params.yaml" command="load" />
      <!-- external params file that could be loaded into the move_base namespace -->
      <rosparam file="$(arg custom_param_file)" command="load" />

      <!-- reset frame_id parameters using user input data -->
      <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
      <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
      <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
      <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
      <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>

      <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/>
      <remap from="odom" to="$(arg odom_topic)"/>
      <remap from="scan" to="$(arg laser_topic)"/>
    </node>


    <!-- our code -->
    <node name="state_machine" pkg="pioneer_bot" type="full_state.py" output="screen" required="true" />
</launch>
